{"version":3,"file":"ContentRenderer-RHpM8rVt.js","sources":["../../../../node_modules/.pnpm/@nuxt+content@2.13.4_db0@0.3.2_ioredis@5.7.0_magicast@0.3.5_nuxt@3.19.2_@parcel+watcher_7e7971975ff5eb694dd433e304c853bb/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue"],"sourcesContent":["<script>\nimport { defineComponent, watch, h, useSlots } from \"vue\";\nimport ContentRendererMarkdown from \"./ContentRendererMarkdown.vue\";\nexport default defineComponent({\n  name: \"ContentRenderer\",\n  props: {\n    /**\n     * The document to render.\n     */\n    value: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Whether or not to render the excerpt.\n     * @default false\n     */\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * The tag to use for the renderer element if it is used.\n     * @default 'div'\n     */\n    tag: {\n      type: String,\n      default: \"div\"\n    }\n  },\n  setup(props) {\n    watch(\n      () => props.excerpt,\n      (newExcerpt) => {\n        if (newExcerpt && !props.value?.excerpt) {\n          console.warn(`No excerpt found for document content/${props?.value?._path}.${props?.value?._extension}!`);\n          console.warn(\"Make sure to use <!--more--> in your content if you want to use excerpt feature.\");\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n  },\n  /**\n   * Content empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { value, excerpt, tag } = ctx;\n    const markdownAST = excerpt ? value?.excerpt : value?.body;\n    if (!markdownAST?.children?.length && slots?.empty) {\n      return slots.empty({ value, excerpt, tag, ...this.$attrs });\n    }\n    if (slots?.default) {\n      return slots.default({ value, excerpt, tag, ...this.$attrs });\n    }\n    if (markdownAST?.type === \"root\" && markdownAST?.children?.length) {\n      return h(\n        ContentRendererMarkdown,\n        {\n          value,\n          excerpt,\n          tag,\n          ...this.$attrs\n        }\n      );\n    }\n    return h(\n      \"pre\",\n      null,\n      JSON.stringify({ message: \"You should use slots with <ContentRenderer>\", value, excerpt, tag }, null, 2)\n    );\n  }\n});\n</script>\n"],"names":["ContentRendererMarkdown"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAK,YAAa,gBAAa;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO;AAAA;AAAA;AAAA;AAAA,IAIL,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS,OAAO,CAAA;AAAA,IAAC;AAAA;AAAA;AAAA;AAAA;AAAA,IAMnB,SAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMX,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IAAA;AAAA,EACX;AAAA,EAEF,MAAM,OAAO;AACX;AAAA,MACE,MAAM,MAAM;AAAA,MACZ,CAAC,eAAe;AACd,YAAI,cAAc,CAAC,MAAM,OAAO,SAAS;AACvC,kBAAQ,KAAK,yCAAyC,OAAO,OAAO,KAAK,IAAI,OAAO,OAAO,UAAU,GAAG;AACxG,kBAAQ,KAAK,kFAAkF;AAAA,QACjG;AAAA,MACF;AAAA,MACA;AAAA,QACE,WAAW;AAAA,MAAA;AAAA,IACb;AAAA,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,KAAK;AACV,UAAM,QAAQ,SAAA;AACd,UAAM,EAAE,OAAO,SAAS,IAAA,IAAQ;AAChC,UAAM,cAAc,UAAU,OAAO,UAAU,OAAO;AACtD,QAAI,CAAC,aAAa,UAAU,UAAU,OAAO,OAAO;AAClD,aAAO,MAAM,MAAM,EAAE,OAAO,SAAS,KAAK,GAAG,KAAK,QAAQ;AAAA,IAC5D;AACA,QAAI,OAAO,SAAS;AAClB,aAAO,MAAM,QAAQ,EAAE,OAAO,SAAS,KAAK,GAAG,KAAK,QAAQ;AAAA,IAC9D;AACA,QAAI,aAAa,SAAS,UAAU,aAAa,UAAU,QAAQ;AACjE,aAAO;AAAA,QACLA;AAAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG,KAAK;AAAA,QAAA;AAAA,MACV;AAAA,IAEJ;AACA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,KAAK,UAAU,EAAE,SAAS,+CAA+C,OAAO,SAAS,OAAO,MAAM,CAAC;AAAA,IAAA;AAAA,EAE3G;AACF,CAAC;;;;;;;","x_google_ignoreList":[0]}